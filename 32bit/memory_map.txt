Memory Map Overview (sorted by start address)

Segments:
  [2000,2001)  os-var        char                 len=1  
  [2001,2002)  os-var        textloc              len=1  
  [2002,2003)  os-var        arg1                 len=1  
  [2003,2004)  os-var        arg2                 len=1  
  [2004,2005)  os-var        res1                 len=1  
  [2005,2006)  os-var        res2                 len=1  
  [2006,2007)  os-var        pow2                 len=1  
  [2007,2008)  os-var        num_digits           len=1  
  [2008,2009)  os-var        ascii_start          len=1  
  [2009,2010)  os-var        no_input             len=1  
  [2010,2011)  os-var        work1                len=1  
  [2011,2012)  os-var        work2                len=1  
  [2012,2013)  os-var        work3                len=1  
  [2013,2014)  os-var        work4                len=1  
  [2014,2015)  os-var        res3                 len=1  
  [2020,2036)  os-data       text                 len=16  from comment
  [2036,2052)  os-data       text2                len=16  from comment
  [2052,2064)  os-data       text_su              len=12  from comment
  [2064,2066)  os-data       space                len=2  from comment
  [2066,2122)  os-data       ascii_map            len=56  from comment
  [2122,2202)  os-data       input_buf            len=80  from comment
  [2202,2203)  os-var        input_ptr            len=1  
  [2203,2204)  os-var        cmd_len              len=1  
  [2204,2205)  os-var        cmd_ready            len=1  
  [2400,2401)  os-var        argv_base            len=1  
  [2500,2501)  os-var        argv_buf             len=1  
  [2599,2600)  os-var        bits_checker         len=1  
  [2600,2601)  os-var        random_seed          len=1  
  [2601,2602)  os-var        inc_random_seed      len=1  
  [2602,2603)  os-var        bits_avail           len=1  
  [3000,4233)  os-table      prog_table           len=1233  length from JSON
  [3000,4233)  prog_table    program_table        len=1233  
  [5000,5120)  code          addsq64              len=120  
  [5120,5728)  code          asteroids            len=608  
  [5728,5801)  code          bufftosep            len=73  
  [5804,6025)  code          calc                 len=221  
  [6028,6216)  code          cat                  len=188  
  [6216,6225)  code          cls                  len=9  
  [6228,7728)  code          compile              len=1500  
  [7728,7907)  code          cpymem               len=179  
  [7908,7991)  code          dispnum              len=83  
  [7992,8140)  code          divide               len=148  
  [8140,8381)  code          dump                 len=241  
  [8384,8438)  code          echo                 len=54  
  [8440,8502)  code          echon                len=62  
  [8504,8660)  code          emu                  len=156  
  [8660,9547)  code          esh                  len=887  
  [9548,9592)  code          fibonacci            len=44  
  [9592,9670)  code          fillmem              len=78  
  [9672,9713)  code          gcd                  len=41  
  [9716,9803)  code          getmnemonicn         len=87  
  [9804,9891)  code          osabi                len=87  
  [9892,9944)  code          getprogaddr          len=52  
  [9944,10048)  code          help                 len=104  
  [10048,10320)  code          hexdump              len=272  
  [10320,10481)  code          list                 len=161  
  [10484,10909)  code          memedit              len=425  
  [10912,11004)  code          modmul               len=92  
  [11004,11051)  code          multiply             len=47  
  [11052,11057)  code          newline              len=5  
  [11060,11069)  code          off                  len=9  
  [11072,11450)  code          osinfo               len=378  
  [11452,11494)  code          parsenum             len=42  
  [11496,11557)  code          peek                 len=61  
  [11560,11668)  code          poke                 len=108  
  [11668,11721)  code          pow                  len=53  
  [11724,11769)  code          pow232               len=45  
  [11772,11848)  code          primes               len=76  
  [11848,11856)  code          printres             len=8  
  [11856,12015)  code          puzzle               len=159  
  [12016,12091)  code          randint              len=75  
  [12092,12166)  code          rem64                len=74  
  [12168,12196)  code          run                  len=28  
  [12196,12284)  code          skipline             len=88  
  [12284,12341)  code          sqrt                 len=57  
  [12344,12384)  code          strcompare           len=40  
  [12384,13490)  code          ted                  len=1106  
  [13492,13513)  code          tgetmnemonic         len=21  
  [13516,13537)  code          tgetosvar            len=21  
  [13540,13561)  code          tgetprog             len=21  
  [13564,13573)  code          testlsa              len=9  
  [13576,13804)  code          testmem              len=228  
  [13804,16037)  code          tetris               len=2233  
  [16040,16047)  code          toggledis            len=7  
  [16048,16055)  code          wait100              len=7  
  [16056,16076)  code          wait1600             len=20  
  [16076,16081)  code          wait3200             len=5  
  [16084,16095)  code          writechar            len=11  
  [19996,19999)  os-code       CALL_STUB            len=3  JSR,<op>,RET
  [19999,20000)  os-var        call_stub_initial    len=1  
  [20000,20007)  bss           addsq64              len=7  
  [20007,20019)  bss           asteroids            len=12  
  [20019,20183)  bss           bufftosep            len=164  
  [20183,20189)  bss           cat                  len=6  
  [20189,20926)  bss           compile              len=737  
  [20926,20929)  bss           cpymem               len=3  
  [20929,20932)  bss           dispnum              len=3  
  [20932,20935)  bss           divide               len=3  
  [20935,20942)  bss           dump                 len=7  
  [20942,20944)  bss           echo                 len=2  
  [20944,22564)  bss           esh                  len=1620  
  [22564,22566)  bss           fibonacci            len=2  
  [22566,22569)  bss           fillmem              len=3  
  [22569,22571)  bss           gcd                  len=2  
  [22571,22573)  bss           getmnemonicn         len=2  
  [22573,22575)  bss           osabi                len=2  
  [22575,22577)  bss           getprogaddr          len=2  
  [22577,22580)  bss           help                 len=3  
  [22580,22586)  bss           hexdump              len=6  
  [22586,22589)  bss           list                 len=3  
  [22589,22596)  bss           memedit              len=7  
  [22596,22600)  bss           modmul               len=4  
  [22600,22605)  bss           multiply             len=5  
  [22605,22617)  bss           osinfo               len=12  
  [22617,22620)  bss           pow                  len=3  
  [22620,22622)  bss           pow232               len=2  
  [22622,22625)  bss           primes               len=3  
  [22625,22635)  bss           puzzle               len=10  
  [22635,22637)  bss           randint              len=2  
  [22637,22644)  bss           rem64                len=7  
  [22644,22646)  bss           run                  len=2  
  [22646,22650)  bss           sqrt                 len=4  
  [22650,22652)  bss           strcompare           len=2  
  [22652,22665)  bss           ted                  len=13  
  [22665,22671)  bss           testmem              len=6  
  [22671,22933)  bss           tetris               len=262  
  [25008,25052)  data          asteroids_data       len=44  
  [25072,25108)  data          calc_data            len=36  
  [25136,25531)  data          compile_data         len=395  
  [25552,26113)  data          emu_data             len=561  
  [26144,26195)  data          esh_data             len=51  
  [26224,26493)  data          getmnemonicn_data    len=269  
  [26512,26845)  data          osabi_data           len=333  
  [26864,28001)  data          help_data            len=1137  
  [28032,28049)  data          hexdump_data         len=17  
  [28080,28107)  data          list_data            len=27  
  [28128,28463)  data          osinfo_data          len=335  
  [28480,28535)  data          ted_data             len=55  
  [28560,28608)  data          testmem_data         len=48  
  [28624,29244)  data          tetris_data          len=620  

Free gaps between segments:
  [2015,2020)  words=5  (free)
  [2205,2400)  words=195  (free)
  [2401,2500)  words=99  (free)
  [2501,2599)  words=98  (free)
  [2603,3000)  words=397  (free)
  [4233,5000)  words=767  (free)
  [5801,5804)  words=3  (free)
  [6025,6028)  words=3  (free)
  [6225,6228)  words=3  (free)
  [7907,7908)  words=1  (free)
  [7991,7992)  words=1  (free)
  [8381,8384)  words=3  (free)
  [8438,8440)  words=2  (free)
  [8502,8504)  words=2  (free)
  [9547,9548)  words=1  (free)
  [9670,9672)  words=2  (free)
  [9713,9716)  words=3  (free)
  [9803,9804)  words=1  (free)
  [9891,9892)  words=1  (free)
  [10481,10484)  words=3  (free)
  [10909,10912)  words=3  (free)
  [11051,11052)  words=1  (free)
  [11057,11060)  words=3  (free)
  [11069,11072)  words=3  (free)
  [11450,11452)  words=2  (free)
  [11494,11496)  words=2  (free)
  [11557,11560)  words=3  (free)
  [11721,11724)  words=3  (free)
  [11769,11772)  words=3  (free)
  [12015,12016)  words=1  (free)
  [12091,12092)  words=1  (free)
  [12166,12168)  words=2  (free)
  [12341,12344)  words=3  (free)
  [13490,13492)  words=2  (free)
  [13513,13516)  words=3  (free)
  [13537,13540)  words=3  (free)
  [13561,13564)  words=3  (free)
  [13573,13576)  words=3  (free)
  [16037,16040)  words=3  (free)
  [16047,16048)  words=1  (free)
  [16055,16056)  words=1  (free)
  [16081,16084)  words=3  (free)
  [16095,19996)  words=3901  (free)
  [22933,25008)  words=2075  (free)
  [25052,25072)  words=20  (free)
  [25108,25136)  words=28  (free)
  [25531,25552)  words=21  (free)
  [26113,26144)  words=31  (free)
  [26195,26224)  words=29  (free)
  [26493,26512)  words=19  (free)
  [26845,26864)  words=19  (free)
  [28001,28032)  words=31  (free)
  [28049,28080)  words=31  (free)
  [28107,28128)  words=21  (free)
  [28463,28480)  words=17  (free)
  [28535,28560)  words=25  (free)
  [28608,28624)  words=16  (free)
