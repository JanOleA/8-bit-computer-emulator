Memory Map Overview (sorted by start address)

Segments:
  [2000,2001)  os-var        char                 len=1  
  [2001,2002)  os-var        textloc              len=1  
  [2002,2003)  os-var        arg1                 len=1  
  [2003,2004)  os-var        arg2                 len=1  
  [2004,2005)  os-var        res1                 len=1  
  [2005,2006)  os-var        res2                 len=1  
  [2006,2007)  os-var        pow2                 len=1  
  [2007,2008)  os-var        num_digits           len=1  
  [2008,2009)  os-var        ascii_start          len=1  
  [2009,2010)  os-var        no_input             len=1  
  [2010,2011)  os-var        work1                len=1  
  [2011,2012)  os-var        work2                len=1  
  [2012,2013)  os-var        work3                len=1  
  [2013,2014)  os-var        work4                len=1  
  [2014,2015)  os-var        res3                 len=1  
  [2020,2036)  os-data       text                 len=16  from comment
  [2036,2052)  os-data       text2                len=16  from comment
  [2052,2064)  os-data       text_su              len=12  from comment
  [2064,2066)  os-data       space                len=2  from comment
  [2066,2122)  os-data       ascii_map            len=56  from comment
  [2122,2202)  os-data       input_buf            len=80  from comment
  [2202,2203)  os-var        input_ptr            len=1  
  [2203,2204)  os-var        cmd_len              len=1  
  [2204,2205)  os-var        cmd_ready            len=1  
  [2400,2401)  os-var        argv_base            len=1  
  [2500,2501)  os-var        argv_buf             len=1  
  [2599,2600)  os-var        bits_checker         len=1  
  [2600,2601)  os-var        random_seed          len=1  
  [2601,2602)  os-var        inc_random_seed      len=1  
  [2602,2603)  os-var        bits_avail           len=1  
  [2603,2604)  os-var        screen_width         len=1  
  [2604,2605)  os-var        screen_height        len=1  
  [3000,4889)  os-table      prog_table           len=1889  length from JSON
  [3000,4889)  prog_table    program_table        len=1889  
  [5000,5120)  code          addsq64              len=120  
  [5120,5700)  code          asteroids            len=580  
  [5700,5786)  code          bufftosep            len=86  
  [5786,5991)  code          calc                 len=205  
  [5991,6182)  code          cat                  len=191  
  [6182,6191)  code          cls                  len=9  
  [6191,6282)  code          compareget           len=91  
  [6282,7732)  code          compile              len=1450  
  [7732,7902)  code          cpymem               len=170  
  [7902,7949)  code          dispint              len=47  
  [7949,8028)  code          dispnum              len=79  
  [8028,8176)  code          divide               len=148  
  [8176,8327)  code          dump                 len=151  
  [8327,8343)  code          echon                len=16  
  [8343,8499)  code          emu                  len=156  
  [8499,9385)  code          esh                  len=886  
  [9385,9429)  code          fibonacci            len=44  
  [9429,9498)  code          fillmem              len=69  
  [9498,9539)  code          gcd                  len=41  
  [9539,9555)  code          getmnemonicn         len=16  
  [9555,9571)  code          osabi                len=16  
  [9571,9636)  code          getprogaddr          len=65  
  [9636,9733)  code          help                 len=97  
  [9733,10055)  code          hexdump              len=322  
  [10055,10244)  code          list                 len=189  
  [10244,10657)  code          memedit              len=413  
  [10657,10749)  code          modmul               len=92  
  [10749,10796)  code          multiply             len=47  
  [10796,10801)  code          newline              len=5  
  [10801,10810)  code          off                  len=9  
  [10810,11258)  code          osinfo               len=448  
  [11258,11315)  code          parsenum             len=57  
  [11315,11333)  code          peek                 len=18  
  [11333,11371)  code          poke                 len=38  
  [11371,11424)  code          pow                  len=53  
  [11424,11470)  code          pow232               len=46  
  [11470,11546)  code          primes               len=76  
  [11546,11612)  code          print                len=66  
  [11612,11629)  code          printez              len=17  
  [11629,11788)  code          puzzle               len=159  
  [11788,11856)  code          randint              len=68  
  [11856,11929)  code          rem64                len=73  
  [11929,11966)  code          run                  len=37  
  [11966,12054)  code          skipline             len=88  
  [12054,12137)  code          split                len=83  
  [12137,12194)  code          sqrt                 len=57  
  [12194,12240)  code          strcompare           len=46  
  [12240,13333)  code          ted                  len=1093  
  [13333,13351)  code          tgetmnemonic         len=18  
  [13351,13369)  code          tgetosvar            len=18  
  [13369,13390)  code          tgetprog             len=21  
  [13390,13399)  code          testlsa              len=9  
  [13399,13613)  code          testmem              len=214  
  [13613,15898)  code          tetris               len=2285  
  [15898,15905)  code          toggledis            len=7  
  [15905,15912)  code          wait100              len=7  
  [15912,15932)  code          wait1600             len=20  
  [15932,15937)  code          wait3200             len=5  
  [15937,15945)  code          writechar            len=8  
  [19996,19999)  os-code       CALL_STUB            len=3  JSR,<op>,RET
  [19999,20000)  os-var        call_stub_initial    len=1  
  [20000,20008)  bss           addsq64              len=8  
  [20008,20020)  bss           asteroids            len=12  
  [20020,20188)  bss           bufftosep            len=168  
  [20188,20190)  bss           cat                  len=2  
  [20190,20192)  bss           compareget           len=2  
  [20192,20929)  bss           compile              len=737  
  [20929,20932)  bss           cpymem               len=3  
  [20932,20935)  bss           dispint              len=3  
  [20935,20938)  bss           dispnum              len=3  
  [20938,20941)  bss           divide               len=3  
  [20941,20948)  bss           dump                 len=7  
  [20948,22568)  bss           esh                  len=1620  
  [22568,22570)  bss           fibonacci            len=2  
  [22570,22573)  bss           fillmem              len=3  
  [22573,22575)  bss           gcd                  len=2  
  [22575,22577)  bss           getmnemonicn         len=2  
  [22577,22579)  bss           osabi                len=2  
  [22579,22582)  bss           getprogaddr          len=3  
  [22582,22585)  bss           help                 len=3  
  [22585,22592)  bss           hexdump              len=7  
  [22592,22595)  bss           list                 len=3  
  [22595,22602)  bss           memedit              len=7  
  [22602,22606)  bss           modmul               len=4  
  [22606,22611)  bss           multiply             len=5  
  [22611,22628)  bss           osinfo               len=17  
  [22628,22632)  bss           parsenum             len=4  
  [22632,22635)  bss           poke                 len=3  
  [22635,22638)  bss           pow                  len=3  
  [22638,22640)  bss           pow232               len=2  
  [22640,22643)  bss           primes               len=3  
  [22643,22647)  bss           print                len=4  
  [22647,22649)  bss           printez              len=2  
  [22649,22659)  bss           puzzle               len=10  
  [22659,22661)  bss           randint              len=2  
  [22661,22668)  bss           rem64                len=7  
  [22668,22670)  bss           run                  len=2  
  [22670,22836)  bss           split                len=166  
  [22836,22840)  bss           sqrt                 len=4  
  [22840,22843)  bss           strcompare           len=3  
  [22843,22856)  bss           ted                  len=13  
  [22856,22862)  bss           testmem              len=6  
  [22862,23124)  bss           tetris               len=262  
  [25008,25052)  data          asteroids_data       len=44  
  [25072,25107)  data          calc_data            len=35  
  [25136,25138)  data          compareget_data      len=2  
  [25168,25563)  data          compile_data         len=395  
  [25584,26145)  data          emu_data             len=561  
  [26176,26259)  data          esh_data             len=83  
  [26288,26562)  data          getmnemonicn_data    len=274  
  [26592,26960)  data          osabi_data           len=368  
  [26976,28645)  data          help_data            len=1669  
  [28672,28689)  data          hexdump_data         len=17  
  [28720,28747)  data          list_data            len=27  
  [28768,29133)  data          osinfo_data          len=365  
  [29152,29188)  data          poke_data            len=36  
  [29216,29257)  data          run_data             len=41  
  [29280,29335)  data          ted_data             len=55  
  [29360,29408)  data          testmem_data         len=48  
  [29424,30044)  data          tetris_data          len=620  

Free gaps between segments:
  [2015,2020)  words=5  (free)
  [2205,2400)  words=195  (free)
  [2401,2500)  words=99  (free)
  [2501,2599)  words=98  (free)
  [2605,3000)  words=395  (free)
  [4889,5000)  words=111  (free)
  [15945,19996)  words=4051  (free)
  [23124,25008)  words=1884  (free)
  [25052,25072)  words=20  (free)
  [25107,25136)  words=29  (free)
  [25138,25168)  words=30  (free)
  [25563,25584)  words=21  (free)
  [26145,26176)  words=31  (free)
  [26259,26288)  words=29  (free)
  [26562,26592)  words=30  (free)
  [26960,26976)  words=16  (free)
  [28645,28672)  words=27  (free)
  [28689,28720)  words=31  (free)
  [28747,28768)  words=21  (free)
  [29133,29152)  words=19  (free)
  [29188,29216)  words=28  (free)
  [29257,29280)  words=23  (free)
  [29335,29360)  words=25  (free)
  [29408,29424)  words=16  (free)
