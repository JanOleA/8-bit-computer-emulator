;! name: ECHO
;! entry: start
;! deps: echon, newline, write_char
;! abi: os
;! bss: auto
;! align: 4

start:
  ; argc = [argv_base]
  LDA .argv_base
  STA .work1           ; remaining args = argc
  ; if argc == 0 â†’ just newline
  CPI 0
  JPZ end_with_nl

  ; slot_ptr = argv_base + 1 (points to argv[1] slot)
  LDI .argv_base
  ADI 1
  STA .res2

; loop over arguments
echo_arg:
  ; arg_ptr = *slot_ptr
  PHA
  LAS
  STA .arg1
  ; print token using ECHON (auto length, no newline)
  LDI 0
  STA .num_digits
  LDI 1
  STA .arg2
  JSR @echon
  ; remaining--
  LDA .work1
  SUI 1
  STA .work1
  ; if no more, finish with newline
  CPI 0
  JPZ end_with_nl
  ; otherwise print a space and advance to next slot
  LDI 32
  STA .char
  JSR @write_char
  LDA .res2
  ADI 1
  STA .res2
  JMP echo_arg

end_with_nl:
  JSR @newline
  RET
