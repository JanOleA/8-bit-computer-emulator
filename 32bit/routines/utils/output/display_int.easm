;! name: DISPINT
;! entry: display_int
;! deps: display_number, pow, write_char
;! abi: sysinfo
;! bss: auto
;! align: 1

; -- Prints a signed (2s complement) number in decimal --
; Input: A register: argument: value to print (signed, use A register to determine number of bits)

sign_bit_mask = .bss + 1   ; mask for sign bit based on ..__sys_bits_avail
print_count   = .bss + 3   ; local counter for total chars printed ('-' + digits)

display_int:
  STA .bss
  STA .bss + 2

  ; pow(2, bits-1) to get sign bit mask
  LDI 2
  PHA
  LDA ..__sys_bits_avail
  SUI 1
  PHA
  JSR @pow
  STA .sign_bit_mask

  ; reset local count
  LDI 0
  STA .print_count

  ; Check if negative
  LDA .bss
  CMP .sign_bit_mask      ; if value >= sign bit mask, it's negative
  JPC di_negative
  JMP di_positive         ; if positive, skip negation
di_negative:
  ; It's negative: print '-' and negate value
  LDI 45                  ; ASCII '-'
  JSR @write_char
  ; record 1 char printed for '-'
  LDI 1
  STA .print_count
  LDI 0
  SUB .bss
  STA .bss
di_positive:
  ; Print absolute value
  LDA .bss
  JSR @display_number
  ; add any leading '-' to digit count: .__res3 = digits + print_count
  LDA .__res3
  ADD .print_count
  STA .__res3

  ; Restore original value to A before returning
  LDA .bss + 2
  RET