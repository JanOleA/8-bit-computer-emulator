;! name: TESTSPLIT
;! entry: main
;! abi: os

print_substring.start_idx = .bss
print_substring.end_idx = .bss + 1
print_substring.string_length = .bss + 2
main.sep = .bss + 3
main.indices_ptr = .bss + 4
main.num_indices = .bss + 5
main.first_string_end = .bss + 6
main.i = .bss + 7
main.start_idx = .bss + 8
main.end_idx = .bss + 9
__tmp_addr = .bss + 10
__tmp_base = .bss + 11
.text_in = "hello,world,this,is,a,test"

  JMP main

print_substring:
  PLA
  MOVAB
  PLA
  STA .print_substring.end_idx
  PLA
  STA .print_substring.start_idx
  MOVBA
  PHA
  LDA .print_substring.end_idx
  SUB .print_substring.start_idx
  STA .print_substring.string_length
  LDI .text_in
  ADD .print_substring.start_idx
  PHA
  LDI 0
  PHA
  LDA .print_substring.string_length
  PHA
  JSR @print
  RET

main:
  LDI 44
  STA .main.sep
  LDI .text_in
  PHA
  LDA .main.sep
  PHA
  JSR @split
  PLA
  STA .main.indices_ptr
  PLA
  STA .main.num_indices
  PHA
  JSR @display_number
  JSR @newline
  JSR @newline
  LDA .main.indices_ptr
  STA .__tmp_base
  STA .__tmp_addr
  LAP ; pointer element load
  STA .main.first_string_end
  LDI 0
  PHA
  LDA .main.first_string_end
  PHA
  JSR print_substring
  LDI 0
  STA .main.i
MAIN__WHILE_START_1:
  LDA .main.num_indices
  CPI 0
  JPZ MAIN__WHILE_END_2
  LDA .main.indices_ptr
  STA .__tmp_base
  LDA .main.i
  ADD .__tmp_base
  STA .__tmp_addr
  LAP ; pointer element load
  STA .main.start_idx
  LDA .main.num_indices
  SUI 1
  CPI 0
  JPZ MAIN__ELSE_4
  LDA .main.indices_ptr
  STA .__tmp_base
  LDA .main.i
  ADI 1
  ADD .__tmp_base
  STA .__tmp_addr
  LAP ; pointer element load
  STA .main.end_idx
  JMP MAIN__ENDIF_3
MAIN__ELSE_4:
  LDI 26
  STA .main.end_idx
MAIN__ENDIF_3:
  LDA .main.start_idx
  ADI 1
  PHA
  LDA .main.end_idx
  PHA
  JSR print_substring
  LDA .main.i
  ADI 1
  STA .main.i
  LDA .main.num_indices
  SUI 1
  STA .main.num_indices
  JMP MAIN__WHILE_START_1
MAIN__WHILE_END_2:
  RET

