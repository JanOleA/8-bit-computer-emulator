;! name: SQRT
;! entry: sqrt
;! deps:
;! abi: os
;! bss: auto
;! align: 4

; Integer floor square root using subtraction of odd numbers.
; Inputs: .arg1 = n
; Returns: .res1 = floor(sqrt(n)), .res2 = residual, .work1 = gap to next square, .res1 is also in A

sqrt:
  ; m = n
  LDA .arg1
  STA .bss          ; m
  ; step = 1
  LDI 1
  STA .bss + 1      ; step
  ; x = 0
  LDI 0
  STA .bss + 2      ; x

sqrt_loop:
  ; while m >= step
  LDA .bss          ; m
  CMP .bss + 1      ; step
  JPC sqrt_ge       ; if m >= step
  JMP sqrt_done
sqrt_ge:
  ; m -= step
  LDA .bss
  SUB .bss + 1
  STA .bss
  ; x += 1
  LDA .bss + 2
  ADI 1
  STA .bss + 2
  ; step += 2
  LDA .bss + 1
  ADI 2
  STA .bss + 1
  JMP sqrt_loop

sqrt_done:
  LDA .bss
  STA .res2
  LDA .bss + 1
  SUB .bss
  STA .work1
  LDA .bss + 2
  STA .res1
  RET

