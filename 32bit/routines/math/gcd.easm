;! name: GCD
;! entry: gcd
;! deps: divide
;! abi: all
;! bss: auto
;! align: 1

; Compute gcd(__arg1, __arg2) using Euclid's algorithm.
; Inputs: .__arg1 = a, .__arg2 = b
; Returns: .__res1 = gcd(a,b); A = gcd

gcd:
  ; a -> .bss, b -> .bss+1
  LDA .__arg1
  STA .bss
  LDA .__arg2
  STA .bss + 1

gcd_loop:
  ; if b == 0: done
  LDA .bss + 1
  CPI 0
  JPZ gcd_done
  ; r = a % b  (divide returns A=quot, .__res2=remainder)
  LDA .bss
  STA .__arg1
  LDA .bss + 1
  STA .__arg2
  JSR @divide
  ; a = b, b = r
  LDA .bss + 1
  STA .bss
  LDA .__res2
  STA .bss + 1
  JMP gcd_loop

gcd_done:
  LDA .bss
  STA .__res1
  LDA .__res1
  RET

