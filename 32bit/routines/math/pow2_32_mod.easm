;! name: POW232
;! entry: pow2_32_mod
;! deps:
;! abi:
;! bss: auto
;! align: 1

; Call signature: pow2_32_mod(SP - 2) = pow2_32_mod(input_mod)
; Inputs:
;   Stack Pointer - 2 = input_mod
; Returns: A = (2^32) % input_mod
; Compute 2^32 % input_mod. Returns result in A.

mod =     bss + 0
r =       bss + 1
counter = bss + 2

pow2_32_mod:
  PLA             ; get return address from stack
  MOVAB           ; move return address to B for now
  PLA             ; get mod from stack
  STA .mod       
  MOVBA           ; move return address back to A
  PHA             ; push it back to stack
  LDI 1
  STA .r          ; r = 1
  LDI 32
  STA .counter
p2_loop:
  CPI 0
  JPZ p2_done
  ; r = (r + r) % mod
  LDA .r
  ADD .r
  STA .r
  CMP .mod
  JPC p2_sub
  JMP p2_next
p2_sub:
  SUB .mod
  STA .r
p2_next:
  LDA .counter
  SUI 1
  STA .counter
  JNZ p2_loop

p2_done:
  LDA .r
  RET
